import "status_code.proto";
import "table_schema.proto";

package tera;

message KeyRange {
    optional bytes key_start = 1;
    optional bytes key_end = 2;
}

message RowResult {
    repeated KeyValuePair key_values = 3;
}

message BytesList {
    repeated bytes content = 1;
    repeated StatusCode status = 2;
    repeated RowResult row_result = 3;
}

message KeyValuePair {
    optional bytes key = 1;
    optional bytes value = 2;
    optional bool del = 3;
    optional bytes column_family = 4;
    optional bytes qualifier = 5;
    optional int64 timestamp = 6;
}

message TabletLocation {
    required KeyRange key_range = 1;
    required string server_addr = 2;
}

message Rollback {
    optional string name = 1;
    optional uint64 snapshot_id = 2;
    optional uint64 rollback_point = 3;
}

message ScanOption {
    optional KeyRange key_range = 1;
    optional int32 max_version = 2;
    optional int64 size_limit = 3; 
    optional bytes start = 4;
    optional bytes end = 5;
    optional string start_family = 6;
    optional bytes start_qualifier = 7;
    optional uint64 snapshot_id = 8;
    optional bool round_down = 9;
}

message TabletCounter {
    optional uint32 low_read_cell = 1;
    optional uint32 scan_rows = 2;
    optional uint32 scan_kvs = 3;
    optional uint32 scan_size = 4;
    optional uint32 read_rows = 5;
    optional uint32 read_kvs = 6;
    optional uint32 read_size = 7;
    optional uint32 write_rows = 8;
    optional uint32 write_kvs = 9;
    optional uint32 write_size = 10;
    optional double write_workload = 11 [default = 0.0];

    optional bool is_on_busy = 15 [default = false];
}

message TableCounter {
    optional int64 lread = 1;
    optional int64 scan_rows = 2;
    optional int64 scan_max = 3;
    optional int64 scan_size = 4;
    optional int64 read_rows = 5;
    optional int64 read_max = 6;
    optional int64 read_size = 7;
    optional int64 write_rows = 8;
    optional int64 write_max = 9;
    optional int64 write_size = 10;

    optional int64 tablet_num = 20;
    optional int64 notready_num = 21;
    optional int64 size = 22;
    repeated int64 lg_size = 23;
}

message TableMeta {
    optional string table_name = 1;
    optional TableStatus status = 2;
    optional TableSchema schema = 3;
    repeated uint64 snapshot_list = 4;
    optional uint64 create_time = 5;
    repeated string rollback_names = 6;
}

message TabletMeta {
    required string table_name = 1;
    required string path = 2;
    required KeyRange key_range = 3;
    optional string server_addr = 4;
    optional TabletStatus status = 5;
    optional int64 size = 6;
    optional bool compress = 7;     // for Compatible
    optional CompactStatus compact_status = 8 [default = kTableNotCompact];
    optional StoreMedium store_medium = 9 [default = DiskStore]; // for Compatible
    repeated uint64 snapshot_list = 11;
    repeated uint64 parent_tablets = 12;
    repeated int64 lg_size = 13;
    repeated Rollback rollbacks = 14;
}

message TableMetaList {
    repeated TableMeta meta = 1;
    repeated TableCounter counter = 2;
}

message TabletMetaList {
    repeated TabletMeta meta = 1;
    repeated TabletCounter counter = 2;
}

message SdkTabletCookie {
    optional TabletMeta meta = 1;
    optional int64 update_time = 2;
    optional int32 status = 3;
}

message SdkCookie {
    required string table_name = 1;
    repeated SdkTabletCookie tablets = 2;
}
